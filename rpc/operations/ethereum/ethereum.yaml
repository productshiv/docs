components:
  parameters:
    apiKey:
      description: >-
        <style>.custom-style {color: #048FF4;}</style>For better limits &
        Advanced Features, <span class='custom-style'><a
        href='https://dashboard.tatum.io/?a=docs' target='_blank'>create your
        own API key</a></span>
      in: path
      name: apiKey
      required: true
      example: t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
      schema:
        type: string
        x-go-name: ApiKey
      x-go-name: ApiKey
    asset-id:
      description: Asset ID
      in: query
      name: asset-id
      schema:
        type: integer
        x-go-name: AssetID
      x-go-name: AssetID
  responses:
    AccountApplicationResponse:
      content:
        application/json:
          schema:
            properties:
              app-local-state: {}
              created-app: {}
              round:
                description: The round for which this information is relevant.
                type: integer
            required:
              - round
            type: object
      description: >-
        AccountApplicationResponse describes the account's application local
        state and global state (AppLocalState and AppParams, if either exists)
        for a specific application ID. Global state will only be returned if the
        provided address is the application's creator.
  schemas:
    id:
      type: integer
      default: 1
      description: Unique identifier for the request
      x-go-name: ID
    jsonrpc:
      type: string
      default: '2.0'
      description: JSON-RPC protocol version
      x-go-name: JsonRpc
    method:
      type: string
      description: RPC method to call.
      x-go-name: Method
    from:
      type: string
      title: to
      description: The address the transaction is sent from.
      default: '0xd46e8dd67c5d32be8058bb8eb970870f07244567'
      x-go-name: From
    to:
      type: string
      title: to
      description: The address to which the transaction is directed to.
      default: '0x0942d080C3E95Ca7d2E57F54D05E644418982C7a'
    value:
      type: string
      title: value
      description: Integer of the value sent with this transaction
      default: '0x0'
    tag:
      type: string
      title: tag
      description: Block Tag to be used with parameter
      default: latest
    address:
      type: string
      title: address
      description: On chain Ethereum address you would like to use
      default: '0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842'
    keys:
      type: array
      items:
        type: string
      description: An array of storage-keys that should be proofed and included
      default:
        - '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    CallObject:
      type: object
      properties:
        from:
          type: string
          title: address
          description: On chain Ethereum address you would like to use
          default: '0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842'
        to:
          type: string
          title: address
          description: On chain Ethereum address you would like to use
          default: '0xd46e8dd67c5d32be8058bb8eb970870f07244567'
        gas:
          type: string
          description: The integer of gas provided for the transaction execution
          default: '0x00'
        gasPrice:
          type: string
          description: >-
            The integer of gasPrice used for each paid gas encoded as
            hexadecimal
          default: '0x09184e72a000'
        value:
          type: string
          title: value
          description: Integer of the value sent with this transaction
          default: '0x0'
        data:
          type: string
          title: value
          description: >-
            The hash of the method signature and encoded parameters. For more
            information, see the Contract ABI description in the Solidity
            documentation
          default: 0x
      required:
        - from
        - to
        - gas
        - gasPrice
        - value
        - data
    FilterObject:
      type: object
      properties:
        fromBlock:
          default: '0x429d3b'
          type: string
          description: The block number from which to get logs.
        toBlock:
          default: latest
          type: string
          description: The block number from which to stop getting logs.
        address:
          type: array
          items:
            type: string
          default:
            - '0xb59f67a8bff5d8cd03f6ac17265c550ed8f33907'
          description: Address from which to get logs.
        topics:
          type: array
          items:
            type: string
          default:
            - '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'
            - '0x00000000000000000000000000b46c2526e227482e2ebb8f4c69e4674d262e75'
            - '0x00000000000000000000000054a2d42a40f51259dedd1978f6c118a0f0eff078'
          description: Array of topics to filter logs.
      required:
        - fromBlock
        - toBlock
        - address
        - topics
    LogResultArray:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            description: Address from which the log originated.
      description: Array of log objects returned by the query.
    params:
      type: array
      items: {}
      x-go-name: Params
    commonRequests:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        jsonrpc:
          $ref: '#/components/schemas/jsonrpc'
        method:
          $ref: '#/components/schemas/method'
      required:
        - id
        - jsonrpc
        - method
    commonRequestsWithParams:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        jsonrpc:
          $ref: '#/components/schemas/jsonrpc'
        params:
          $ref: '#/components/schemas/params'
        method:
          $ref: '#/components/schemas/method'
      required:
        - id
        - jsonrpc
        - method
        - params
    estimateGas:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        jsonrpc:
          $ref: '#/components/schemas/jsonrpc'
        method:
          $ref: '#/components/schemas/method'
        params:
          type: array
          items:
            type: object
            properties:
              from:
                $ref: '#/components/schemas/from'
              to:
                $ref: '#/components/schemas/to'
              value:
                $ref: '#/components/schemas/value'
            required:
              - to
      required:
        - id
        - jsonrpc
        - method
        - params
info:
  title: RPC OAS by Shiv
  version: 1.0.0
openapi: 3.0.3
paths:
  /eth_blockNumber/{apiKey}:
    post:
      description: Returns the number of the most recent block.
      operationId: eth_blockNumber
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_blockNumber
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Returns integer of the current block number the client is on.'
      summary: /eth_blockNumber
      tags:
        - Ethereum
  /eth_getBalance/{apiKey}:
    post:
      description: Returns the native eth balance of the account of a given address.
      operationId: eth_getBalance
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_getBalance
                      description: RPC method to call.
                    params:
                      default:
                        - "0x0942d080C3E95Ca7d2E57F54D05E644418982C7a"
                        - "latest"
                      description: >-
                        Enter the Address you would like to fetch Native ETH
                        abalnce for and blockParameter as string, for
                        blockParameter you can pass blockNumber or blockHas or
                        tags like 'pendoing' or 'latest' or 'earliest'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBalance
      tags:
        - Ethereum
  /eth_getLogs/{apiKey}:
    post:
      description: Returns an array of logs matching a specified filter object.
      operationId: eth_getLogs
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required : true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getLogs
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        $ref: '#/components/schemas/FilterObject'
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          description: Array of log objects or an empty array if none are found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResultArray'
      summary: /eth_getLogs
      tags:
        - Ethereum
  /eth_chainId/{apiKey}:
    post:
      description: Returns the currently configured chain ID.
      operationId: eth_chainId
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_chainId
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_chainId
      tags:
        - Ethereum
  /eth_getBlockByNumber/{apiKey}:
    post:
      description: Returns information about a block by block number.
      operationId: eth_getBlockByNumber
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_getBlockByNumber
                      description: RPC method to call.
                    params:
                      type: array
                      description: "An array of parameters where the first element must be a 'blockIdentifier' (string) and the second element must be 'fullTransactionObjects' (boolean)."
                      items:
                        anyOf:
                          - type: string
                            title: "Block Identifier"
                            description: "A string representing the block number or a tag such as 'latest', 'pending', 'safe', 'finalized', or 'earliest'."
                            enum: ['latest', 'pending', 'safe', 'finalized', 'earliest']
                          - type: boolean
                            title: "Full Transaction Flag"
                            description: "A boolean where 'true' indicates full transaction objects are required, and 'false' indicates only hashes are needed."
                      minItems: 2
                      maxItems: 2
                      additionalProperties: false

      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBlockByNumber
      tags:
        - Ethereum
  /eth_accounts/{apiKey}:
    post:
      description: Returns a list of addresses owned by client.
      operationId: eth_accounts
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_accounts
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_accounts
      tags:
        - Ethereum
  /eth_feeHistory/{apiKey}:
    post:
      description: Returns a collection of historical gas information.
      operationId: eth_feeHistory
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_feeHistory
                      description: RPC method to call.
                    params:
                      items:
                        oneOf:
                          - type: string
                            title: Block Count
                            description: >-
                              Number of blocks in the requested range. Between 1
                              and 1024 blocks can be requested in a single query
                              (may return less than requested range if not all
                              blocks are available).
                            default: '0x5'
                          - type: string
                            title: Full Transaction Flag
                            description: Highest number block in the requested range
                            default: latest
                          - type: array
                            items:
                              type: number
                            title: Full Transaction Flag
                            description: Highest number block in the requested range
                            default: []
                      description: >-
                        integer - Block count or range string - Block number (in
                        hex) or block tag array of integers - (optional) Reward
                        percentiles to sample from each block
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_feeHistory
      tags:
        - Ethereum
  /eth_estimateGas/{apiKey}:
    post:
      description: >-
        Estimate the amount of gas that will be required to execute a
        transaction.
      operationId: eth_estimateGas
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/estimateGas'
                - properties:
                    method:
                      type: string
                      default: eth_estimateGas
                      description: RPC method to call.
      responses:
        '200':
          description: Response with the estimated gas amount.
      summary: /eth_estimateGas
      tags:
        - Ethereum
  /eth_gasPrice/{apiKey}:
    post:
      description: Returns the current price per gas in wei.
      operationId: eth_gasPrice
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_gasPrice
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_gasPrice
      tags:
        - Ethereum
  /eth_getBlockTransactionCountByHash/{apiKey}:
    post:
      description: >-
        Returns the number of transactions in a block matching the given block
        hash.
      operationId: eth_getBlockTransactionCountByHash
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getBlockTransactionCountByHash
                      description: RPC method to call.
                    params:
                      default:
                        - >-
                          0x8243343df08b9751f5ca0c5f8c9c0460d8a9b6351066fae0acbd4d3e776de8bb
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBlockTransactionCountByHash
      tags:
        - Ethereum
  /eth_getBlockReceipts/{apiKey}:
    post:
      description: Get all transaction receipts for a given block on Ethereum.
      operationId: eth_getBlockReceipts
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getBlockReceipts
                      description: RPC method to call.
                    params:
                      type: string
                      default: latest
                      description: >-
                        String - One of the following options:block hash or
                        block number (in hex) or block tag (one of the
                        following):
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBlockReceipts
      tags:
        - Ethereum
  /eth_getBlockTransactionCountByNumber/{apiKey}:
    post:
      description: >-
        Returns the number of transactions in a block matching the given block
        number.
      operationId: eth_getBlockTransactionCountByNumber
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getBlockTransactionCountByNumber
                      description: RPC method to call.
                    params:
                      default:
                        - finalized
                      description: >-
                        String - One of the following options:block hash or
                        block number (in hex) or block tag (one of the
                        following):
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBlockTransactionCountByNumber
      tags:
        - Ethereum
  /eth_getCode/{apiKey}:
    post:
      description: Returns code at a given address.
      operationId: eth_getCode
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getCode
                      description: RPC method to call.
                    params:
                      default:
                        - '0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8'
                        - latest
                      description: >-
                        1. String - 20 Bytes - Address 2. String - One of the
                        following options:block hash or block number (in hex) or
                        block tag (one of the following):
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getCode
      tags:
        - Ethereum
  /eth_getProof/{apiKey}:
    post:
      description: >-
        Returns the account and storage values of the specified account
        including the Merkle-proof. This call can be used to verify that the
        data you are pulling from is not tampered with.
      operationId: eth_getProof
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getProof
                      description: RPC method to call.
                    params:
                      default:
                        - '0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842'
                        - - >-
                            0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421
                        - latest
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getProof
      tags:
        - Ethereum
  /eth_getStorageAt/{apiKey}:
    post:
      description: >-
        Returns the value from a storage position at a given address, or in
        other words, returns the state of the contract's storage, which may not
        be exposed via the contract's methods.
      operationId: eth_getStorageAt
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getStorageAt
                      description: RPC method to call.
                    params:
                      default:
                        - '0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8'
                        - '0x0'
                        - latest
                      description: >-
                        1. String - 20 Bytes - address of the storage 2. String
                        - Integer of the slot position in the storage (in hex)
                        3. String - Either the hex value of a block number OR a
                        block hash OR One of the following block tags:
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getStorageAt
      tags:
        - Ethereum
  /eth_getTransactionByBlockHashAndIndex/{apiKey}:
    post:
      description: >-
        Returns information about a transaction by block hash and transaction
        index position.
      operationId: eth_getTransactionByBlockHashAndIndex
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getTransactionByBlockHashAndIndex
                      description: RPC method to call.
                    params:
                      default:
                        - >-
                          0xbf06c77f6ed9a65441795eb8c2ccd694b3fc9b4d1be6066bf7ed52c73c5ec97c
                        - '0x64'
                      description: >-
                        1. String - 32 Bytes - Hash of a block 2. String -
                        Integer of the transaction index position (in hex).
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getTransactionByBlockHashAndIndex
      tags:
        - Ethereum
  /eth_getTransactionByHash/{apiKey}:
    post:
      description: >-
        Returns the information about a transaction requested by transaction
        hash. In the response object, blockHash, blockNumber, and
        transactionIndex are null when the transaction is pending.
      operationId: eth_getTransactionByHash
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getTransactionByHash
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - >-
                          0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b
                      description: 1. String - 32 Bytes - Hash of a transaction
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getTransactionByHash
      tags:
        - Ethereum
  /eth_getTransactionCount/{apiKey}:
    post:
      description: Returns the number of transactions sent from an address.
      operationId: eth_getTransactionCount
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getTransactionCount
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - '0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8'
                        - latest
                      description: >-
                        1. String - 20 Bytes - Address 2. String - Either the
                        hex value of a block number OR a block hash OR One of
                        the following block tags:
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getTransactionCount
      tags:
        - Ethereum
  /eth_getTransactionReceipt/{apiKey}:
    post:
      description: Returns the receipt of a transaction by transaction hash.
      operationId: eth_getTransactionReceipt
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getTransactionReceipt
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - >-
                          0xab059a62e22e230fe0f56d8555340a29b2e9532360368f810595453f6fdd213b
                      description: 1. DATA, 32 Bytes - hash of a transaction
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getTransactionReceipt
      tags:
        - Ethereum
  /eth_getUncleByBlockHashAndIndex/{apiKey}:
    post:
      description: >-
        Returns information about an uncle of a block by hash and uncle index
        position.
      operationId: eth_getUncleByBlockHashAndIndex
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getUncleByBlockHashAndIndex
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - >-
                          0xb3e8c898cfbf4072eaad440e8606e578a33ca4fafc27d7936d83d7392ba3e939
                        - '0x0'
                      description: >-
                        1. String - 32 Bytes - Hash of a block 2. String - The
                        uncle''s index position (in hex)
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getUncleByBlockHashAndIndex
      tags:
        - Ethereum
  /eth_getUncleByBlockNumberAndIndex/{apiKey}:
    post:
      description: >-
        Returns information about an uncle of a block by number and uncle index
        position.
      operationId: eth_getUncleByBlockNumberAndIndex
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getUncleByBlockNumberAndIndex
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - latest
                        - '0x0'
                      description: >-
                        1. String - either the hex value of a block number OR
                        One of the following block tags: 2. String - The uncle's
                        index position (in hex)
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getUncleByBlockNumberAndIndex
      tags:
        - Ethereum
  /eth_getUncleCountByBlockHash/{apiKey}:
    post:
      description: Returns the number of uncles in a block matching the given block hash.
      operationId: eth_getUncleCountByBlockHash
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getUncleCountByBlockHash
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - >-
                          0xb3e8c898cfbf4072eaad440e8606e578a33ca4fafc27d7936d83d7392ba3e939
                      description: 1. String - 32 Bytes - Hash of a block
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getUncleCountByBlockHash
      tags:
        - Ethereum
  /eth_getUncleCountByBlockNumber/{apiKey}:
    post:
      description: Returns the number of uncles in a block matching the given block number.
      operationId: eth_getUncleCountByBlockNumber
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getUncleCountByBlockNumber
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - '0x61A80'
                      description: 1. String - 32 Bytes - Hash of a block
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getUncleCountByBlockNumber
      tags:
        - Ethereum
  /eth_maxPriorityFeePerGas/{apiKey}:
    post:
      description: >-
        Returns a fee per gas that is an estimate of how much you can pay as a
        priority fee, or 'tip', to get a transaction included in the current
        block.
      operationId: eth_maxPriorityFeePerGas
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_maxPriorityFeePerGas
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_maxPriorityFeePerGas
      tags:
        - Ethereum
  /eth_protocolVersion/{apiKey}:
    post:
      description: Returns the current ethereum protocol version.
      operationId: eth_protocolVersion
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_protocolVersion
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_protocolVersion
      tags:
        - Ethereum
  /eth_sendRawTransaction/{apiKey}:
    post:
      description: >-
        Creates a new message call transaction or a contract creation for signed
        transactions.
      operationId: eth_sendRawTransaction
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_sendRawTransaction
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - >-
                          0xf86d808504a817c800825208943535353535353535353535353535353535353535880de0b6b3a7640000801ca0e0d2e3f3d8de8a0c9f25d0b02c7a8a91e7e1c818e6f37a49d8b04f9a9a96a1a0620a6c8d95e0f289bfbf2b3d3e476de6b9bc6d0e974c06f1e4de5be7c5ef0e10
                      description: String - The signed transaction data.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_sendRawTransaction
      tags:
        - Ethereum
  /net_listening/{apiKey}:
    post:
      description: Returns true if client is actively listening for network connections.
      operationId: net_listening
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: net_listening
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /net_listening
      tags:
        - Ethereum
  /net_version/{apiKey}:
    post:
      description: ''
      operationId: net_version
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: net_version
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /net_version
      tags:
        - Ethereum
  /web3_clientVersion/{apiKey}:
    post:
      description: ''
      operationId: web3_clientVersion
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: web3_clientVersion
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /web3_clientVersion
      tags:
        - Ethereum
  /web3_sha/{apiKey}:
    post:
      description: Returns Keccak-256 (not the standardized SHA3-256) of the given data.
      operationId: web3_sha
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: web3_sha
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - '0x68656c6c6f20776f726c64'
                      description: >-
                        1. DATA - the data in hex form to convert into a SHA3
                        hash
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /web3_sha
      tags:
        - Ethereum
  /eth_getTransactionByBlockNumberAndIndex/{apiKey}:
    post:
      description: >-
        Returns information about a transaction by block number and transaction
        index position.
      operationId: eth_getTransactionByBlockNumberAndIndex
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getTransactionByBlockNumberAndIndex
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                      default:
                        - latest
                        - '0x0'
                      description: >-
                        1. String - either the hex value of a block number OR
                        One of the following block tags: 2. String - The
                        transaction index position (in hex)
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getTransactionByBlockNumberAndIndex
      tags:
        - Ethereum
  /eth_call/{apiKey}:
    post:
      description: >-
        Executes a new message call immediately without creating a transaction
        on the block chain.
      operationId: eth_call
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_getLogs
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        oneOf:
                          - type: string
                            title: >-
                              The block number in hexadecimal format or the
                              block tag
                            default: >-
                              0xe76d777791f48b5995d20789183514f4aa8bbf09e357383e9a44fae025c6c50a
                          - $ref: '#/components/schemas/CallObject'
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_call
      tags:
        - Ethereum
  /eth_getBlockByHash/{apiKey}:
    post:
      description: Returns information about a block by block hash.
      operationId: eth_getBlockByHash
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_getBlockByHash
                      description: RPC method to call.
                    params:
                      items:
                        oneOf:
                          - type: string
                            title: Hash - Hash of the block
                            default: >-
                              0xe76d777791f48b5995d20789183514f4aa8bbf09e357383e9a44fae025c6c50a
                          - type: boolean
                            title: Full Transaction Flag
                            description: >-
                              A boolean where 'true' means full transaction
                              objects are expected and 'false' means only hashes
                              are needed.
                            default: false
                      default:
                        - >-
                          0xe76d777791f48b5995d20789183514f4aa8bbf09e357383e9a44fae025c6c50a
                        - false
                      description: >-
                        Enter the blockNumber you would like to fetch as
                        string,or tags like 'pending' or 'latest' or 'safe' or
                        'finalized' or earliest'. Also pass a boolean true if
                        full transaction objects are expected and a flase if
                        just the hashes of transactions.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getBlockByHash
      tags:
        - Ethereum
  /eth_createAccessList/{apiKey}:
    post:
      description: >-
        Ethereum API - Creates an EIP2930 type accessList based on a given
        Transaction object. Returns list of addresses and storage keys that are
        read and written by the transaction (except the sender account and
        precompiles), plus the estimated gas consumed when the access list is
        added.
      operationId: eth_createAccessList
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_createAccessList
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        oneOf:
                          - type: string
                            title: >-
                              The block number in hexadecimal format or the
                              block tag
                            default: >-
                              0xe76d777791f48b5995d20789183514f4aa8bbf09e357383e9a44fae025c6c50a
                          - $ref: '#/components/schemas/CallObject'
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_createAccessList
      tags:
        - Ethereum
  /eth_newFilter/{apiKey}:
    post:
      description: >-
        Creates a filter object, based on filter options, to notify when the
        state changes (logs).
      operationId: eth_newFilter
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_newFilter
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        $ref: '#/components/schemas/FilterObject'
                      description: >-
                        One or more filter objects specifying the logs to
                        return.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_newFilter
      tags:
        - Ethereum
  /eth_getFilterChanges/{apiKey}:
    post:
      description: ''
      operationId: eth_getFilterChanges
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_getFilterChanges
                      description: RPC method to call.
                    params:
                      items:
                        type: string
                        title: String - The filter id.
                        default: '0x1'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getFilterChanges
      tags:
        - Ethereum
  /eth_getFilterLogs/{apiKey}:
    post:
      description: >-
        Returns an array of all logs matching filter with given id. Can compute
        the same results with an eth_getLogs call.
      operationId: eth_getFilterLogs
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_getFilterLogs
                      description: RPC method to call.
                    params:
                      items:
                        type: string
                        title: String - The filter id.
                        default: '0x1'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_getFilterLogs
      tags:
        - Ethereum
  /eth_newBlockFilter/{apiKey}:
    post:
      description: Creates a filter in the node, to notify when a new block arrives.
      operationId: eth_newBlockFilter
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_newBlockFilter
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_newBlockFilter
      tags:
        - Ethereum
  /eth_newPendingTransactionFilter/{apiKey}:
    post:
      description: >-
        Creates a filter in the node, to notify when new pending transactions
        arrive. To check if the state has changed, call eth_getFilterChanges.
      operationId: eth_newPendingTransactionFilter
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_newPendingTransactionFilter
                      description: RPC method to call.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_newPendingTransactionFilter
      tags:
        - Ethereum
  /eth_uninstallFilter/{apiKey}:
    post:
      description: >-
        Uninstalls a filter with given id. Should always be called when watch is
        no longer needed. Additionally, Filters timeout when they aren’t
        requested with eth_getFilterChangesfor a period of time.
      operationId: eth_uninstallFilter
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequests'
                - properties:
                    method:
                      type: string
                      default: eth_createAccessList
                      description: RPC method to call.
                    params:
                      type: array
                      items:
                        type: string
                        title: String - The filter id.
                        default: '0x1'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_uninstallFilter
      tags:
        - Ethereum
  /eth_sendPrivateTransaction/{apiKey}:
    post:
      description: >-
        Send a single private transaction through Flashbots. Private
        transactions are sent directly to miners and not included in the public
        mempool.
      operationId: eth_sendPrivateTransaction
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/commonRequestsWithParams'
                - properties:
                    method:
                      type: string
                      default: eth_sendPrivateTransaction
                      description: RPC method to call.
                    params:
                      items:
                        allOf:
                          - type: string
                            title: Raw, signed transaction
                            default: >-
                              0x02f87205158459682f00850c51e9727a82520894477db63b8e73aea96f201c3c4f5e8fbfcdd18b5c87038d7ea4c6800080c080a0312d6375e578ab953a41456d4be583a46dced97a9e38f349bb8e7b63d14cfc1ea001daea40332180670568a1864e6d3f910b194903128d4a0a5c499597f3f6ff40
                          - type: string
                            title: >-
                              Hex-encoded number for highest block number in
                              which the transaction should be included.
                            default: '0x2540BE400'
                          - type: boolean
                            title: Fast
                            description: >-
                              A boolean where 'true' means full transaction
                              objects are expected and 'false' means only hashes
                              are needed.
                            default: false
                      default:
                        - >-
                          0x02f87205158459682f00850c51e9727a82520894477db63b8e73aea96f201c3c4f5e8fbfcdd18b5c87038d7ea4c6800080c080a0312d6375e578ab953a41456d4be583a46dced97a9e38f349bb8e7b63d14cfc1ea001daea40332180670568a1864e6d3f910b194903128d4a0a5c499597f3f6ff40
                        - '0x2540BE400'
                        - false
                      description: >-
                        Enter the blockNumber you would like to fetch as
                        string,or tags like 'pending' or 'latest' or 'safe' or
                        'finalized' or earliest'. Also pass a boolean true if
                        full transaction objects are expected and a flase if
                        just the hashes of transactions.
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: VersionsResponse is the response to 'GET /versions'
      summary: /eth_sendPrivateTransaction
      tags:
        - Ethereum
servers:
  - url: https://api.tatum.io/v3/blockchain/node/ethereum-mainnet
