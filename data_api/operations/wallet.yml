components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
security:
  - ApiKeyAuth: []

info:
  title: Data API
  version: "1.0.0"
openapi: 3.0.3
paths:
  /v3/data/balances:
    get:
      tags:
        - Wallet API
      summary: getBalances
      operationId: getBalances
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: addresses
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated list of addresses
      responses:
        '200':
          description: Successful response
  
  /v3/data/transactions:
    get:
      tags:
        - Wallet API
      summary: getTransactions
      operationId: getTransactions
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
      responses:
        '200':
          description: Successful response
          # Define response schema

  /v3/data/utxos:
    get:
      tags:
        - Wallet API
      summary: Retrieve unspent transaction outputs (UTXOs) for a specific address
      operationId: getUTXOs
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., bitcoin)
        - name: address
          in: query
          required: true
          schema:
            type: string
          description: Bitcoin address
        - name: totalValue
          in: query
          schema:
            type: string
          description: Minimum total value of UTXOs to return
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the properties of your response here
                  exampleProperty:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

servers:
  - url: https://api.tatum.io/
