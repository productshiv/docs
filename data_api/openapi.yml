components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: Default API key is t-645a26e22d0761001c811c84-645a26e32d0761001c811c8a
security:
  - ApiKeyAuth: []


openapi: 3.1.0
info:
  title: Data API
  version: "1.0.0"

paths:
  /v3/data/collections:
    get:
      summary: Retrieve data for a specific collection
      operationId: getCollectionsData
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
            enum:
              - ethereum
              - ethereum-sepolia
              - celo
              - celo-testnet
              - bsc
              - bsc-testnet
              - polygon
              - polygon-mumbai
              - eon
              - chiliz
          description: The blockchain to query
        - name: collectionAddresses
          in: query
          required: true
          schema:
            type: string
          description: Address of the collection
      tags:
        - Data API
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the properties of your response here
                  exampleProperty:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  
  /v3/data/metadata:
    get:
      tags:
        - Data API
      summary: Retrieve metadata for a specific token
      operationId: getTokenMetadata
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: The blockchain to query (e.g., ethereum)
        - name: tokenAddress
          in: query
          required: true
          schema:
            type: string
          description: Address of the token
        - name: tokenIds
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of token IDs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the properties of your response here
                  exampleProperty:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  
  /v3/data/balances:
    get:
      tags:
        - Data API
      summary: Retrieve balances for specified addresses
      operationId: getBalances
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: addresses
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated list of addresses
      responses:
        '200':
          description: Successful response
  
  /v3/data/owners:
    get:
      tags:
        - Data API
      summary: Retrieve owners for a specific token
      operationId: getOwners
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: tokenAddress
          in: query
          required: true
          schema:
            type: string
          description: Token address
      responses:
        '200':
          description: Successful response
          # Define response schema
  
  /v3/data/owners/address:
    get:
      tags:
        - Data API
      summary: Retrieve ownership information for a specific address
      operationId: getOwnershipByAddress
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: address
          in: query
          required: true
          schema:
            type: string
          description: Address to query
        - name: tokenAddress
          in: query
          required: true
          schema:
            type: string
          description: Token address
      responses:
        '200':
          description: Successful response
  
  /v3/data/transactions:
    get:
      tags:
        - Data API
      summary: Retrieve transactions for a specific blockchain
      operationId: getTransactions
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
      responses:
        '200':
          description: Successful response
          # Define response schema

  /v3/data/transactions/hash:
    get:
      tags:
        - Data API
      summary: Retrieve transaction details by hash
      operationId: getTransactionByHash
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: hash
          in: query
          required: true
          schema:
            type: string
          description: Transaction hash
      responses:
        '200':
          description: Successful response
          # Define response schema

  /v3/data/events:
    get:
      tags:
        - Data API
      summary: Retrieve events for specific contract addresses and blocks
      operationId: getEvents
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: contractAddresses
          in: query
          required: true
          schema:
            type: string
          description: Comma-separated contract addresses
        - name: blockFrom
          in: query
          schema:
            type: string
          description: Starting block number
        - name: blockTo
          in: query
          schema:
            type: string
          description: Ending block number
        - name: eventType
          in: query
          schema:
            type: string
          description: Type of event to retrieve
      responses:
        '200':
          description: Successful response
          # Define response schema

  /v3/data/blocks:
    get:
      tags:
        - Data API
      summary: Retrieve blocks for a specific blockchain
      operationId: getBlocks
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
      responses:
        '200':
          description: Successful response
          # Define response schema

  /v3/data/blocks/latest:
    get:
      tags:
        - Data API
      summary: Retrieve the latest block for a specific blockchain
      operationId: getLatestBlock
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
      responses:
        '200':
          description: Successful response
          # Define response schema
  
  /v3/data/tokens:
    get:
      tags:
        - Data API
      summary: Retrieve token information for a specific address
      operationId: getTokenInformation
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., ethereum)
        - name: tokenAddress
          in: query
          required: true
          schema:
            type: string
          description: Token address
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the properties of your response here
                  exampleProperty:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /v3/data/utxos:
    get:
      tags:
        - Data API
      summary: Retrieve unspent transaction outputs (UTXOs) for a specific address
      operationId: getUTXOs
      parameters:
        - name: chain
          in: query
          required: true
          schema:
            type: string
          description: Blockchain to query (e.g., bitcoin)
        - name: address
          in: query
          required: true
          schema:
            type: string
          description: Bitcoin address
        - name: totalValue
          in: query
          schema:
            type: string
          description: Minimum total value of UTXOs to return
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Define the properties of your response here
                  exampleProperty:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

servers:
  - url: https://api.tatum.io/v3/blockchain/node/ethereum-mainnet
